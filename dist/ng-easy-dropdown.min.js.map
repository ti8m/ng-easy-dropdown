{"version":3,"sources":["src/helpers.js","src/easy-dropdown-directive.js","src/polyfills.js","src/easy-dropdown-controller.js","src/index.js"],"names":["getElementIndex","node","index","currentNode","previousElementSibling","siblings","el","Array","prototype","filter","call","parentNode","children","child","unwrap","parent","grandParent","insertBefore","removeChild","getCollectionName","comprehensionString","replace","easyDropdownDirective","$timeout","scope","element","attrs","_ref","init","settings","watchCollection","collection","match","$watchCollection","$parent","ctrl","rendered","destroy","_ref2","ngModelController","ngOptions","options","slice","find","optionWithNgRepeat","n","hasAttribute","getAttribute","$watch","$modelValue","newValue","selectedOption","querySelector","select","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","this","document","ownerDocument","querySelectorAll","i","length","item","window","closest","parentElement","arr","forEach","hasOwnProperty","defineProperty","previousSibling","nodeType","undefined","CharacterData","predicate","TypeError","list","Object","thisArg","arguments","value","$","angular","EasyDropdownController","$window","$rootScope","isField","down","inFocus","disabled","cutOff","hasLabel","keyboardMode","nativeTouch","wrapperClass","onChange","instances","selectElement","extend","$select","$options","isTouch","removeClass","o","option","selected","innerText","focusIndex","label","setAttribute","push","eq","text","render","$on","close","bind","touchClass","disabledClass","$container","wrap","$active","title","append","$carat","$scrollWrapper","$dropDown","$form","active","$items","addClass","getMaxHeight","bindTouchHandlers","bindHandlers","maxHeight","$item","offsetHeight","on","focus","e","target","_this3","self","query","_this4","open","stopPropagation","body","classNames","split","join","$t","key","keyCode","wasDown","preventDefault","scrollToView","search","resetQuery","String","fromCharCode","setTimeout","scrollTop","scrollHeight","off","scrollY","documentElement","scrollLeft","scrollX","scrollOffset","notInViewport","closeAll","scrollTo","css","$emit","selectIndex","removeAttr","prop","triggerHandler","lock","_this5","getTitle","toUpperCase","indexOf","$focusItem","range","innerHeight","clientHeight","menuBottom","getBoundingClientRect","top","min","max","unbindHandlers","remove","attr","$inject","module","directive","controller","easyDropdownController"],"mappings":"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","file":"ng-easy-dropdown.min.js","sourcesContent":["export function getElementIndex(node) {\n  let index = 0;\n  let currentNode = node;\n  while (currentNode.previousElementSibling) {\n    index += 1;\n    currentNode = currentNode.previousElementSibling;\n  }\n  return index;\n}\n\nexport function siblings(el) {\n  return Array.prototype.filter.call(el.parentNode.children, child => child !== el);\n}\n\nexport function unwrap(el) {\n  // get the element's parent node\n  const parent = el.parentNode;\n  const grandParent = el.parentNode.parentNode;\n\n  // move all children out of the element\n  grandParent.insertBefore(el, parent);\n\n  // remove the empty element\n  grandParent.removeChild(parent);\n\n  return el;\n}\n","import { getElementIndex } from './helpers';\n\n/**\n * Get the collection out of a comprehension string such as\n * 'for i in [1, 2, 3, 4, 5]' or 'for i in array' etc...\n * @param comprehensionString\n * @returns {string}\n */\nfunction getCollectionName(comprehensionString) {\n  return comprehensionString.replace(/.*\\sin\\s([^ ]+).*/, '$1');\n}\n\nfunction easyDropdownDirective($timeout) {\n  return {\n    restrict: 'A',\n    controller: 'easyDropdownController',\n    require: ['easyDropdown', '?ngModel'],\n    scope: {\n      settings: '<',\n    },\n    link: (scope, element, attrs, [ctrl, ngModelController]) => {\n\n      function init() {\n        ctrl.init(element, scope.settings || {});\n      }\n\n      function watchCollection(collection) {\n        $timeout(() => {\n          if (!collection.match(/\\[.*\\]/)) {\n            // dynamic list -> watch for changes\n            scope.$watchCollection(() => scope.$parent[collection], () => {\n              $timeout(() => {\n                if (ctrl.rendered) {\n                  ctrl.destroy();\n                }\n                init();\n              });\n            }, true);\n          } else {\n            // static list -> no need to watch it\n            init();\n          }\n        });\n      }\n\n      // ng-options -> watch the options\n      if (attrs.ngOptions) {\n        // watch for option changes\n        watchCollection(getCollectionName(attrs.ngOptions));\n      }\n\n      $timeout(() => {\n        const options = [].slice.call(element.find('option'));\n        const optionWithNgRepeat = options.find(n => n.hasAttribute('ng-repeat'));\n        if (optionWithNgRepeat) {\n          // // ng-repeat -> watch for collection changes\n          watchCollection(getCollectionName(optionWithNgRepeat.getAttribute('ng-repeat')));\n        } else {\n          // static options -> render without watching\n          init();\n        }\n      });\n\n      if (ngModelController) {\n        // watch model changes and set the dropdown value if the value changed\n        scope.$watch(() => ngModelController.$modelValue, (newValue) => {\n          if (newValue && ctrl.rendered) {\n            $timeout(() => {\n              const selectedOption = element[0].querySelector('[selected]');\n\n              if (selectedOption) {\n                const index = getElementIndex(selectedOption);\n                ctrl.select(index);\n              }\n            });\n          }\n        });\n      }\n    },\n  };\n}\n\neasyDropdownDirective.$inject = ['$timeout'];\n\nexport default easyDropdownDirective;\n\n","/* eslint-disable */\n\n// matches polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function matchesPolyfill(s) {\n      const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n      for (let i = matches.length - 1; i >= 0; i -= 1) {\n        if (matches.item(i) === this) {\n          return true;\n        }\n      }\n      return false;\n    };\n}\n\n// closest polyfill\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest =\n    function(s) {\n      let matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i,\n        el = this;\n      do {\n        i = matches.length;\n        while (--i >= 0 && matches.item(i) !== el) {}\n      } while ((i < 0) && (el = el.parentElement));\n      return el;\n    };\n}\n\n// previousElementSibling polyfills\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('previousElementSibling')) {\n      return;\n    }\n    Object.defineProperty(item, 'previousElementSibling', {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var el = this;\n        while (el = el.previousSibling) {\n          if (el.nodeType === 1) {\n            return el;\n          }\n        }\n        return null;\n      },\n      set: undefined\n    });\n  });\n})([Element.prototype, CharacterData.prototype]);\n\n// find polyfill\nif (!Array.prototype.find) {\n  Array.prototype.find = function(predicate) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    let list = Object(this);\n    let length = list.length >>> 0;\n    let thisArg = arguments[1];\n    let value;\n\n    for (let i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n    return undefined;\n  };\n}\n\nexport default null;\n","import angular from 'angular';\n// import $ from 'jquery';\nimport './polyfills';\nimport { getElementIndex, siblings, unwrap } from './helpers';\n\nconst closeAllEvent = 'easyDropdown:closeAll';\nconst $ = angular.element;\n\nclass EasyDropdownController {\n\n  constructor($window, $rootScope) {\n    this.$window = $window;\n    this.$rootScope = $rootScope;\n\n    this.isField = true;\n    this.down = false;\n    this.inFocus = false;\n    this.disabled = false;\n    this.cutOff = false;\n    this.hasLabel = false;\n    this.keyboardMode = false;\n    this.nativeTouch = true;\n    this.wrapperClass = 'dropdown';\n    this.onChange = null;\n\n    this.instances = {};\n  }\n\n  init(selectElement, settings) {\n    angular.extend(this, settings);\n    this.$select = selectElement;\n    this.options = [];\n    this.$options = this.$select.find('option');\n    this.isTouch = 'ontouchend' in this.$window.document;\n    this.$select.removeClass(`${this.wrapperClass} dropdown`);\n    if (this.$select[0].matches(':disabled')) {\n      this.disabled = true;\n    }\n    if (this.$options.length) {\n      window.o = this.$options;\n      angular.forEach(this.$options, (option, i) => {\n        if (option.matches(':checked')) {\n          this.selected = {\n            index: i,\n            title: option.innerText,\n          };\n          this.focusIndex = i;\n        }\n\n        if (option.matches('.label') && i === 0) {\n          this.hasLabel = true;\n          this.label = option.innerText;\n          option.setAttribute('value', '');\n        } else {\n          this.options.push({\n            domNode: option,\n            title: option.innerText,\n            value: option.value,\n            selected: option.matches(':checked'),\n          });\n        }\n      });\n\n      if (!this.selected) {\n        this.selected = {\n          index: 0,\n          title: this.$options.eq(0).text(),\n        };\n        this.focusIndex = 0;\n      }\n\n      this.render();\n    }\n\n    // register event handlers\n    this.$rootScope.$on(closeAllEvent, ::this.close);\n  }\n\n  render() {\n    const touchClass = this.isTouch && this.nativeTouch ? ' touch' : '';\n    const disabledClass = this.disabled ? ' disabled' : '';\n\n    this.$container = this.$select\n      .wrap(`<div class=\"${this.wrapperClass}${touchClass}${disabledClass}\"></div>`)\n      .wrap('<span class=\"old\">')\n      .parent()\n      .parent();\n\n    this.$active = $(`<span class=\"selected\">${this.selected.title}</span>`);\n    this.$container.append(this.$active);\n    this.$carat = $('<span class=\"carat\"/>');\n    this.$container.append(this.$carat);\n    this.$scrollWrapper = $('<div><ul/></div>');\n    this.$container.append(this.$scrollWrapper);\n    this.$dropDown = this.$scrollWrapper.find('ul');\n    this.$form = $(this.$container[0].closest('form'));\n\n    this.options.forEach((o) => {\n      const active = o.selected ? ' class=\"active\"' : '';\n      this.$dropDown.append(`<li${active}>${o.title}</li>`);\n    });\n    this.$items = this.$dropDown.find('li');\n\n    if (this.cutOff && this.$items.length > this.cutOff) this.$container.addClass('scrollable');\n\n    this.getMaxHeight();\n\n    if (this.isTouch && this.nativeTouch) {\n      this.bindTouchHandlers();\n    } else {\n      this.bindHandlers();\n    }\n    this.rendered = true;\n  }\n\n  getMaxHeight() {\n    this.maxHeight = 0;\n\n    for (let i = 0; i < this.$items.length; i += 1) {\n      const $item = this.$items.eq(i);\n      this.maxHeight += $item[0].offsetHeight;\n      if (this.cutOff === i + 1) {\n        break;\n      }\n    }\n  }\n\n  bindTouchHandlers() {\n    this.$container.on('click', () => {\n      this.$select[0].focus();\n    });\n\n    this.$select.on('change', (e) => {\n      const selected = e.target.querySelectorAll('option:checked')[0];\n      const title = selected.innerText;\n      const value = selected.value;\n\n      this.$active.text(title);\n      if (typeof this.onChange === 'function') {\n        this.onChange.call(this.$select[0], {\n          title,\n          value,\n        });\n      }\n    });\n\n    this.$select.on('focus', () => {\n      this.$container.addClass('focus');\n    });\n\n    this.$select.on('focus', () => {\n      this.$container.removeClass('focus');\n    });\n  }\n\n  bindHandlers() {\n    const self = this;\n    this.query = '';\n\n    this.$container.on('click', (e) => {\n      if (!this.down && !this.disabled) {\n        this.open();\n      } else {\n        this.close();\n      }\n      e.stopPropagation();\n    });\n\n    this.$container.on('mousemove', () => {\n      if (this.keyboardMode) {\n        this.keyboardMode = false;\n      }\n    });\n\n    $(this.$window.document.body).on('click', (e) => {\n      const classNames = this.wrapperClass.split(' ').join('.');\n\n      if (!e.target.closest(`.${classNames}`) && this.down) {\n        this.close();\n      }\n    });\n\n    this.$items.on('click', (e) => {\n      const index = getElementIndex(e.target);\n      this.select(index);\n      this.$select[0].focus();\n      e.target.setAttribute('selected', 'selected');\n    });\n\n    this.$items.on('mouseover', (e) => {\n      if (!this.keyboardMode) {\n        const $t = $(e.target);\n        $t.addClass('focus');\n        siblings($t[0]).forEach(s => $(s).removeClass('focus'));\n        this.focusIndex = getElementIndex(e.target);\n      }\n    });\n\n    this.$items.on('mouseout', (e) => {\n      if (!this.keyboardMode) {\n        $(e.target).removeClass('focus');\n      }\n    });\n\n    this.$select.on('focus', () => {\n      this.$container.addClass('focus');\n      this.inFocus = true;\n    });\n\n    this.$select.on('blur', () => {\n      this.$container.removeClass('focus');\n      this.inFocus = false;\n    });\n\n    this.$select.on('keydown', (e) => {\n      if (this.inFocus) {\n        this.keyboardMode = true;\n        const key = e.keyCode;\n        const wasDown = this.down;\n\n        if (key === 38 || key === 40 || key === 32 || key === 13) {\n          e.preventDefault();\n          if (key === 38) {\n            this.focusIndex -= 1;\n            this.focusIndex = this.focusIndex < 0 ? this.$items.length - 1 : this.focusIndex;\n          } else if (key === 40) {\n            this.focusIndex += 1;\n            this.focusIndex = this.focusIndex > this.$items.length - 1 ? 0 : this.focusIndex;\n          }\n\n          // open the dropdown with space or enter\n          if (!this.down && key !== 38 && key !== 40) {\n            this.open();\n          } else {\n            this.select(this.focusIndex);\n          }\n          this.$items\n            .removeClass('focus')\n            .eq(this.focusIndex)\n            .addClass('focus');\n\n          if (this.cutOff) {\n            this.scrollToView();\n          }\n\n          this.query = '';\n        }\n\n        if (this.down) {\n          if (key === 9 || key === 27) {\n            this.close();\n          } else if (key === 13 && wasDown) {\n            e.preventDefault();\n            this.select(this.focusIndex);\n            this.close();\n            return false;\n          } else if (key === 8) {\n            e.preventDefault();\n            this.query = this.query.slice(0, -1);\n            this.search();\n            clearTimeout(this.resetQuery);\n            return false;\n          } else if (key !== 38 && key !== 40) {\n            this.query += String.fromCharCode(key);\n            this.search();\n            clearTimeout(this.resetQuery);\n          }\n        }\n      }\n      return false;\n    });\n\n    this.$select.on('keyup', () => {\n      this.resetQuery = setTimeout(() => {\n        this.query = '';\n      }, 1200);\n    });\n\n    this.$dropDown.on('scroll', () => {\n      if (this.$dropDown[0].scrollTop >= this.$dropDown[0].scrollHeight - this.maxHeight) {\n        this.$container.addClass('bottom');\n      } else {\n        this.$container.removeClass('bottom');\n      }\n    });\n\n    if (this.$form.length) {\n      this.$form.on('reset', () => {\n        const active = this.hasLabel ? this.label : self.options[0].title;\n        this.$active.text(active);\n      });\n    }\n  }\n\n  unbindHandlers() {\n    this.$container.off('click');\n    this.$container.off('mousemove');\n    $(this.$window.document.body).off('click');\n    this.$items.off('click');\n    this.$items.off('mouseover');\n    this.$items.off('mouseout');\n    this.$select.off('focus');\n    this.$select.off('blur');\n    this.$select.off('keydown');\n    this.$select.off('keyup');\n    this.$dropDown.off('scroll');\n    this.$form.off('reset');\n  }\n\n  open() {\n    const scrollTop = this.$window.scrollY || this.$window.document.documentElement.scrollTop;\n    const scrollLeft = this.$window.scrollX || this.$window.document.documentElement.scrollLeft;\n    const scrollOffset = this.notInViewport(scrollTop);\n\n    this.closeAll();\n    this.getMaxHeight();\n    this.$select[0].focus();\n    this.$window.scrollTo(scrollLeft, scrollTop + scrollOffset);\n    this.$container.addClass('open');\n    this.$scrollWrapper.css('height', `${this.maxHeight}px`);\n    this.down = true;\n  }\n\n  close() {\n    this.$container.removeClass('open');\n    this.$scrollWrapper.css('height', '0px');\n    this.focusIndex = this.selected.index;\n    this.query = '';\n    this.down = false;\n  }\n\n  closeAll() {\n    this.$rootScope.$emit(closeAllEvent);\n  }\n\n  select(index) {\n    const option = this.options[index];\n    const selectIndex = this.hasLabel ? index + 1 : index;\n    this.$items.removeClass('active').eq(index).addClass('active');\n    this.$active.text(option.title);\n\n    this.$select\n      .find('option')\n      .removeAttr('selected')\n      .eq(selectIndex)\n      .prop('selected', true)\n      .parent()\n      .triggerHandler('change');\n\n    this.selected = {\n      index,\n      title: option.title,\n    };\n    this.focusIndex = index;\n    if (typeof this.onChange === 'function') {\n      this.onChange.call(this.$select[0], {\n        title: option.title,\n        value: option.value,\n      });\n    }\n  }\n\n  search() {\n    const lock = (i) => {\n      this.focusIndex = i;\n      this.$items.removeClass('focus').eq(this.focusIndex).addClass('focus');\n      this.scrollToView();\n    };\n\n    const getTitle = i => this.options[i].title.toUpperCase();\n\n    for (let i = 0; i < this.options.length; i += 1) {\n      const title = getTitle(i);\n      if (title.indexOf(this.query) === 0) {\n        lock(i);\n        return;\n      }\n    }\n\n\n    for (let i = 0; i < this.options.length; i += 1) {\n      const title = getTitle(i);\n      if (title.indexOf(this.query) > -1) {\n        lock(i);\n        break;\n      }\n    }\n  }\n\n  scrollToView() {\n    if (this.focusIndex >= this.cutOff) {\n      const $focusItem = this.$items.eq(this.focusIndex);\n      const scroll = ($focusItem[0].offsetHeight * (this.focusIndex + 1)) - this.maxHeight;\n\n      this.$dropDown[0].scrollTop = ($focusItem[0].offsetHeight * (this.focusIndex + 1)) - this.maxHeight;\n    }\n  }\n\n  notInViewport(scrollTop) {\n    const range = {\n      min: scrollTop,\n      max: scrollTop + (this.$window.innerHeight ||\n      this.$window.document.documentElement.clientHeight),\n    };\n\n    const menuBottom = this.$dropDown[0].getBoundingClientRect().top +\n      document.body.scrollTop + this.maxHeight;\n\n    if (menuBottom >= range.min && menuBottom <= range.max) {\n      return 0;\n    }\n    return (menuBottom - range.max) + 5;\n  }\n\n  destroy() {\n    this.unbindHandlers();\n    unwrap(this.$select[0]);\n    siblings(this.$select[0]).forEach(el => el.remove());\n    unwrap(this.$select[0]);\n    this.rendered = false;\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$container.addClass('disabled');\n    this.$select.attr('disabled', true);\n    if (!this.down) this.close();\n  }\n\n  enable() {\n    const self = this;\n    self.disabled = false;\n    self.$container.removeClass('disabled');\n    self.$select.attr('disabled', false);\n  }\n\n}\n\nEasyDropdownController.$inject = ['$window', '$rootScope'];\n\nexport default EasyDropdownController;\n","import angular from 'angular';\n\nimport easyDropdownController from './easy-dropdown-controller';\nimport easyDropdownDirective from './easy-dropdown-directive';\n\nangular.module('ng-easy-dropdown', [])\n    .directive('easyDropdown', easyDropdownDirective)\n    .controller('easyDropdownController', easyDropdownController);\n\n"]}